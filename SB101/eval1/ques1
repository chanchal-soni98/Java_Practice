Q1/- What do you mean by a Functional programming and Functional interface.
Write the implementations of all the following Functional interfaces with examples
using the Lambda expression:
Predicate<Employee>: If the Employee salary is greater than 8000.
Consumer<Employee>: Print the Employee's details.
Supplier<Employee>: Get the Employee object with all details(empId, name, salary)
Function<String, Employee>: It takes the Employee details in comma separated
String format
like, String emp= “10,Manoj,80000” , (Here the details are empId, Name and
Salary) and return the Employee Object based on this comma separated String.


Ans - functional programming is nothing but a way of writing a code in the form of mathematical functions.


Functional Interface can have only one abstract method is known as functional interface,
 means you can't create multiple abstract method but you are free to create other kind of methods like default and static methods.

Implementation of functional interface