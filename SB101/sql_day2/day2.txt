ques1 


 use day2;
Database changed
mysql> desc customers;
ERROR 1146 (42S02): Table 'day2.customers' doesn't exist
mysql> CREATE TABLE customers (
    -> customer_id INT PRIMARY KEY,
    -> first_name VARCHAR(255) NOT NULL,
    -> last_name VARCHAR(255) NOT NULL,
    -> email VARCHAR(255) NOT NULL,
    -> address VARCHAR(255) DEFAULT NULL,
    -> city VARCHAR(255) DEFAULT NULL,
    -> state VARCHAR(2) DEFAULT NULL,
    -> zip_code VARCHAR(5) DEFAULT NULL
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> desc customers;
+-------------+--------------+------+-----+---------+-------+
| Field       | Type         | Null | Key | Default | Extra |
+-------------+--------------+------+-----+---------+-------+
| customer_id | int          | NO   | PRI | NULL    |       |
| first_name  | varchar(255) | NO   |     | NULL    |       |
| last_name   | varchar(255) | NO   |     | NULL    |       |
| email       | varchar(255) | NO   |     | NULL    |       |
| address     | varchar(255) | YES  |     | NULL    |       |
| city        | varchar(255) | YES  |     | NULL    |       |
| state       | varchar(2)   | YES  |     | NULL    |       |
| zip_code    | varchar(5)   | YES  |     | NULL    |       |
+-------------+--------------+------+-----+---------+-------+
8 rows in set (0.01 sec)

mysql> CREATE TABLE orders (
    -> order_id INT PRIMARY KEY,
    -> customer_id INT NOT NULL,
    -> order_placed_date DATE NOT NULL,
    -> FOREIGN KEY (customer_id) REFERENCES customers
    -> (customer_id)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> desc orders;
+-------------------+------+------+-----+---------+-------+
| Field             | Type | Null | Key | Default | Extra |
+-------------------+------+------+-----+---------+-------+
| order_id          | int  | NO   | PRI | NULL    |       |
| customer_id       | int  | NO   | MUL | NULL    |       |
| order_placed_date | date | NO   |     | NULL    |       |
+-------------------+------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> ^C
mysql> ^C
mysql> insert into customers (customer_id,first_name,last_name,email,address,city,state,zip_code) values (1,'abc','a','abc@gmail.com','1st street','channai','TN',60001);
Query OK, 1 row affected (0.01 sec)

mysql> insert into customers values (2,'efg','e','efg@gmail.com','2nd Street','Bangalore','KA',50002);
Query OK, 1 row affected (0.00 sec)

mysql>  insert into customers values (3,'ijk','i','ijk@gmail.com','3rd Street','Mumbai','MH',40002);
Query OK, 1 row affected (0.00 sec)

mysql> select * from customers;
+-------------+------------+-----------+---------------+------------+-----------+-------+----------+
| customer_id | first_name | last_name | email         | address    | city      | state | zip_code |
+-------------+------------+-----------+---------------+------------+-----------+-------+----------+
|           1 | abc        | a         | abc@gmail.com | 1st street | channai   | TN    | 60001    |
|           2 | efg        | e         | efg@gmail.com | 2nd Street | Bangalore | KA    | 50002    |
|           3 | ijk        | i         | ijk@gmail.com | 3rd Street | Mumbai    | MH    | 40002    |
+-------------+------------+-----------+---------------+------------+-----------+-------+----------+
3 rows in set (0.00 sec)

mysql> ^C
mysql> nsert into orders (order_id,customer_id,order_placed_date) values(1,1,'2016-11-11');
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'nsert into orders (order_id,customer_id,order_placed_date) values(1,1,'2016-11-1' at line 1
mysql> insert into orders (order_id,customer_id,order_placed_date) values(1,1,'2016-11-11');
Query OK, 1 row affected (0.01 sec)

mysql> insert into orders values(2,1,'2016-10-01');
Query OK, 1 row affected (0.00 sec)

mysql>  insert into orders values(3,2,'2016-06-01');
Query OK, 1 row affected (0.00 sec)

mysql> insert into orders values(4,2,'2015-06-01');
Query OK, 1 row affected (0.00 sec)

mysql> insert into orders values(5,1,'2015-06-01');
Query OK, 1 row affected (0.00 sec)

mysql>  select * from orders;
+----------+-------------+-------------------+
| order_id | customer_id | order_placed_date |
+----------+-------------+-------------------+
|        1 |           1 | 2016-11-11        |
|        2 |           1 | 2016-10-01        |
|        3 |           2 | 2016-06-01        |
|        4 |           2 | 2015-06-01        |
|        5 |           1 | 2015-06-01        |
+----------+-------------+-------------------+
5 rows in set (0.00 sec)

mysql> ^C
mysql> select c.email,o.order_id from customers c, orders o where c.customer_id=o.customer_id;
+---------------+----------+
| email         | order_id |
+---------------+----------+
| abc@gmail.com |        1 |
| abc@gmail.com |        2 |
| abc@gmail.com |        5 |
| efg@gmail.com |        3 |
| efg@gmail.com |        4 |
+---------------+----------+
5 rows in set (0.00 sec)





============================
 ques 2. 

> CREATE TABLE Worker (WORKER_ID INT PRIMARY KEY,FIRST_NAME VARCHAR(25),LAST_NAME VARCHAR(25),SALARY INT,JOINING_DATE DATETIME,DEPARTMENT VARCHAR(25));
Query OK, 0 rows affected (0.02 sec)

mysql> DESC WORKER;
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| WORKER_ID    | int         | NO   | PRI | NULL    |       |
| FIRST_NAME   | varchar(25) | YES  |     | NULL    |       |
| LAST_NAME    | varchar(25) | YES  |     | NULL    |       |
| SALARY       | int         | YES  |     | NULL    |       |
| JOINING_DATE | datetime    | YES  |     | NULL    |       |
| DEPARTMENT   | varchar(25) | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
6 rows in set (0.00 sec)


mysql> DESC BONUS;
+---------------+----------+------+-----+---------+-------+
| Field         | Type     | Null | Key | Default | Extra |
+---------------+----------+------+-----+---------+-------+
| WORKER_REF_ID | int      | YES  | MUL | NULL    |       |
| BONUS_AMOUNT  | int      | YES  |     | NULL    |       |
| BONUS_DATE    | datetime | YES  |     | NULL    |       |
+---------------+----------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> DESC TITLE;
+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| WORKER_REF_ID | int         | YES  | MUL | NULL    |       |
| WORKER_TITLE  | varchar(25) | YES  |     | NULL    |       |
| AFFECTED_FROM | datetime    | YES  |     | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)



1. Write an SQL query to show the second highest salary from a Worker table.

ANS SELECT MAX(SALARY) FROM Worker WHERE SALARY < (SELECT MAX(SALARY) FROM Worker);
+-------------+
| MAX(SALARY) |
+-------------+
|      300000 |
+-------------+
1 row in set (0.00 sec)


2. Write an SQL query to determine the 5 highest salary from a Worker table.
ANS  SELECT Salary FROM Worker ORDER BY Salary DESC LIMIT 5;
+--------+
| Salary |
+--------+
| 500000 |
| 500000 |
| 300000 |
| 200000 |
| 100000 |

3. Write an SQL query to show only even rows from a Worker table.

ANS === mysql> SELECT * FROM WORKER WHERE WORKER_ID IN(SELECT WORKER_ID FROM WORKER WHERE WORKER_ID%2 = 0);
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |CD 
+-----------+------------+-----------+--------+---------------------+------------+
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)


Q.4 = Write an SQL query to fetch the no. of workers for each department in descending order.
ANS mysql>  SELECT DEPARTMENT, count(WORKER_ID) No_Of_Workers FROM worker GROUP BY DEPARTMENT ORDER BY No_Of_Workers DESC;
+------------+---------------+
| DEPARTMENT | No_Of_Workers |
+------------+---------------+
| Admin      |             4 |
| HR         |             2 |
| Account    |             2 |
+------------+---------------+

Q.5 Write an SQL query to fetch the list of employees with the same salary from the Worker


